version: '2'

services:
  btc:
    container_name: kenex-btc
    image: kenex/kenex-btc:29102018-viabtc
    build: ./btc/
    ports:
      - "17416:7416"
      - "17316:7316"
      - "17317:7317"
      - "17424:7424"
      - "14444:4444"
      - "18080:8080"
      - "18081:8081"
      - "18091:8091"
    depends_on:
      - zookeeper
      - mysql
      - kafka
      - redis_sentinel
      - redis_slave
      - redis_master
    links:
      - zookeeper:zk
      - mysql:db
      - kafka
      - redis_sentinel
      - redis_slave
      - redis_master

  redis_master:
    container_name: kenex-redis-master
    image: redis:4.0.2-alpine
    ports:
      - "16379:6379"

  redis_slave:
    container_name: kenex-redis-slave
    image: redis:4.0.2-alpine
    ports:
      - "16380:6379"

  redis_sentinel:
    container_name: kenex-redis-sentinel
    build: redis
    image: redis-sentinel
    environment:
      - MASTER_NAME=mymaster
      - QUORUM=1
      - MASTER=redis_master
      - SLAVES=redis_slave
    depends_on:
      - redis_master
      - redis_slave
    ports:
      - "26379:26379"

  mysql:
    container_name: kenex-mysql
    image: mysql:5.7
    build: ./db/
    ports:
      - "13306:3306"

  zookeeper:
    container_name: kenex-zookeeper
    image: wurstmeister/zookeeper
    ports:
      - "12181:2181"

  kafka:
    container_name: kenex-kafka
    image: wurstmeister/kafka
    links:
      - zookeeper
    ports:
      - "19092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

#  kafka_manager:
#    container_name: kenex-kafkamanager
#    image: sheepkiller/kafka-manager:latest
#    ports:
#      - "29092:9000"
#    links:
#      - zookeeper
#      - kafka
#    environment:
#      ZK_HOSTS: zookeeper:9092
#      APPLICATION_SECRET: letmein
#      KM_ARGS: -Djava.net.preferIPv4Stack=true